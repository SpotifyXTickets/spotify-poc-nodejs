# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    environment:
      NODE_ENV: production
      NODE_PORT: 8000
      EVENTIX_CLIENT_ID: HxKtWWsDEvJf9yed9IpDMIPzwOqqUdtfFEUbjTA9
      EVENTIX_CLIENT_SECRET: IZDSUYcVuycMYEScfH0mukBbyQDSEXF6umGGlCG7
      EVENTIX_REDIRECT_URI: http://localhost:8000/authorize/eventix
      SPOTIFY_CLIENT_ID: 9bb83b3b86a24904aee3509fedb8e306
      SPOTIFY_CLIENT_SECRET: e2d97c6f80c74a9781c23abfe3a4b004
      SPOTIFY_REDIRECT_URI: http://localhost:8000/authorize/spotify
      TICKET_MASTER_API_KEY: xQaxU3i5AAUQbCW1Rub3KmOi28aV5cWO
      TICKET_MASTER_SECRET: nZ3klE5VHd9cpVk6
      SESSION_SECRET: keyboardcat
      JWT_SECRET_KEY: aoifijiawfejifaejiojefiuae9wjfq
      MONGODB_URL: mongodb://user:pass@mongodb:27017/?retryWrites=true&w=majority
    ports:
      - 8000:8000
    depends_on:
      - mongodb
    networks:
      - node-network

  mongodb:
    image: mongodb/mongodb-community-server:6.0-ubi8
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=user
      - MONGODB_INITDB_ROOT_PASSWORD=pass
    ports:
      - 27017:27017
    volumes:
      - mongodbdata:/data/db
    networks:
      - node-network

volumes:
  mongodbdata:

networks:
  node-network:
    driver: bridge
# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

